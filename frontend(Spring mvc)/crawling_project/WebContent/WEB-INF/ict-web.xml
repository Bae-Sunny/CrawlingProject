<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd">
<!-- Aop를 어노테이션 방식으로 적용하기 위한 설정  -->
<aop:aspectj-autoproxy/>
<context:component-scan base-package="kr.co.ictedu.mvc"/>
<!-- resources mapping  -->
<mvc:annotation-driven/>
<mvc:resources location="/resources/" mapping="/resources/**"/>

<!--1. DataSource : JNDI -->
<!-- 재사용으로도 유리하고, 싱글톤으로 관리 되기 때문에 안정적이고 효율적  -->
<bean id="dataSource" class="org.springframework.jndi.JndiObjectFactoryBean">
<property name="jndiName" value="java:comp/env/jdbc/myora"/>
</bean>
<!--2. MyBatis  SqlSessionFactoryBean에서 기존의 config.xml,
mapper.xml들도 포함해서 위임받은 설정을 한다.-->
<bean id="factoryBean" class="org.mybatis.spring.SqlSessionFactoryBean">
<property name="dataSource" ref="dataSource"/>
<!-- mybatis 환경설정 파일의 위치  -->
<property name="configLocation" value="classpath:config/config.xml"/>
<!-- mapper란 경로에 있는 모든 xml을 매퍼로 등록  -->
<property name="mapperLocations" value="classpath*:mapper/*.xml"/>
</bean>
<!--3.  Spring 제공 하는 SqlSessionTemplate Dao에서   ss를 DI해야 한다. *****
-->
<bean id="ss" class="org.mybatis.spring.SqlSessionTemplate">
	<constructor-arg ref="factoryBean"/>
</bean>
<!-- MyBatis+Spring 설정 종료  -->
<!-- multipartResolver 파일업로드용 -->
<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver"/>
<!-- 
	viewResolver
	View의 타입 => 
viewResolver 설정
    InternalResourceViewResolver 
	/WEB-INF/views/[hello].jsp
 -->
 <bean id="viewResolver" 
   class="org.springframework.web.servlet.view.InternalResourceViewResolver">
 	<property name="prefix" value="/WEB-INF/views/"/>
 	<property name="suffix" value=".jsp"/>
 </bean>
 
</beans>